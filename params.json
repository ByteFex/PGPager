{"name":"Pgpager","tagline":"Send and Receive PGP/GPG encrypted SMS messages on Raspberry PI","body":"# PGPager\r\n\r\nSend and receive encrypted SMS messages between Raspberry PIs or PGP Smartphone APP and Raspberry PI.\r\n\r\nMission\r\n-------\r\n\r\n- Encrypt and sign SMS messages on a Raspberry PI using a touch-sensitive display without NSA bullshit (and other backdoors).\r\n- Create community to discuss, contribute and review code.\r\n- Create a 3D printer casing (including battery) for the RasPi and the display for everyday use. Should not be bigger than a cigarette package.\r\n- Create user friendly GUI for everyone.\r\n- Have fun sending private messages. \r\n\r\nIntro\r\n-------\r\nPGPager is a Python-App for the Raspberry PI initially written by David Darmann at [ByteFex.com](http://www.ByteFex.com)\r\nIt's designed for a RasPi with the [Adafruit PiTFT](http://www.adafruit.com/products/1601) on top.\r\n\r\nIts touch screen user interface enables you to send and receive PGP encrypted SMS. You can also manage your PGP keys from the user interface. It's developed and tested with an Huawei E303 UMTS USB-Stick but will possibly also work with other Huawei sticks since their interfaces are quite similar.\r\n\r\n\r\nTech\r\n-------\r\n\r\nPGPager uses a number of open source projects to work properly:\r\n\r\n* [pygame] - Set of Python modules designed for writing games.\r\n* [VKeyboard] - A Python Virtual Keyboard for Adafruit PiTFT and other touch screen devices\r\n* [GnuPG] - Complete and free implementation of the OpenPGP standard\r\n* [python-gnupg] - Python wrapper for GnuPG\r\n* [requests] - An Apache2 Licensed HTTP library, written in Python\r\n* [textrect] - Word-wrapped text display module\r\n\r\nInstallation\r\n--------------\r\n\r\n### Preparation\r\n\r\nI assume that you've got the [Adafruit PiTFT] already working and you can see the text console on the PiTFT. If that's not the case, there is an excellent guide at the [Adafruit Learning System]. You can even find a ready to use kernel image there.\r\n\r\nI also assume that you have an ssh connection to your pi. If not, there's also a lot of [tutorials](http://www.raspberrypi.org/documentation/remote-access/ssh/) for that.\r\n\r\nYou can use [FileZilla] to copy files to and from your Raspberry PI. You find all the settings [here](http://www.raspberrypi.org/documentation/remote-access/ssh/sftp.md).\r\n\r\n### Configure Huawei E303\r\nThis can be quite tricky. When you first plug the UMTS-Stick into your Pi (or any other computer) it will act as a CD drive. But that's not what we want. We want it to act as a network interface to give us internet access. That way we can also use the web interface to send and receive SMS messages.\r\n\r\nPlug your E303 into your Pi and type ``lsusb``. This will give you a list of connected usb devices. You should see something like this\r\n```\r\nBus 001 Device 002: ID 0424:9512 Standard Microsystems Corp. \r\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\r\nBus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. \r\nBus 001 Device 004: ID 12d1:1f01 Huawei Technologies Co., Ltd. \r\n```\r\nThe last line here comes from our E303. And the `1f01` (the second part of the ID) tells us, it's in the wrong mode. ``14db`` is what we'd like to see here.\r\n\r\nLuckily there's [usb_modeswitch](http://www.draisberghof.de/usb_modeswitch/). As it's name suggests, it does exactly what we need: it switches our E303 into network-interface mode. It needs a few packages, so let's install those first.\r\n```sh\r\nsudo apt-get install libusb-1.0-0 libusb-1.0-0-dev\r\n```\r\n\r\nI do recommend building it form source to get the latest version. You can do that by running the following commands\r\n```sh\r\nmkdir usb_modeswitch\r\ncd usb_modeswitch/\r\nwget http://www.draisberghof.de/usb_modeswitch/usb-modeswitch-2.2.0.tar.bz2\r\nwget http://www.draisberghof.de/usb_modeswitch/usb-modeswitch-data-20140529.tar.bz2\r\ntar -jxvf usb-modeswitch-2.2.0.tar.bz2\r\ntar -jxvf usb-modeswitch-data-20140529.tar.bz2\r\ncd usb-modeswitch-2.2.0/\r\nsudo make install\r\ncd ../usb-modeswitch-data-20140529/\r\nsudo make install\r\n```\r\nAfter that do a reboot with ``sudo reboot`` and check ``lsusb`` again. You should now see the E303 with the correct ID.\r\n```\r\nBus 001 Device 005: ID 12d1:14db Huawei Technologies Co., Ltd. \r\n```\r\nAlso, when you run `ifconfig` there should be a second network interface `eth1` available. If that's the case, the tricky part is done.\r\n\r\nHowever, we still need to edit the interfaces file:\r\n```sh\r\nsudo nano /etc/network/interfaces\r\n```\r\nCopy & paste the following line in:\r\n```\r\niface eth1 inet dhcp\r\n```\r\n\r\nAfter yet another reboot, the Pi should get an IP address from the E303. If your home network (for ssh access) is also a 192.168.1.0 network you could now get trouble, since the Huawei Stick also uses that network.\r\n\r\nPGPager assumes that the E303 doesn't ask for a PIN Code and it auto-connects to the internet. You can configure this settings from the E303's web interface (just plug it into your Computer).\r\n\r\n### Install necessary packages\r\n\r\nPGPager needs a few packages installed. I assume that you are running Raspbian and therefore list only those which are not already included.\r\n\r\n#### Install PIP\r\n[PIP](https://pypi.python.org/pypi/pip) is a tool for installing and managing Python packages. To install it, use the following commands on your Pi\r\n```sh\r\nwget https://raw.github.com/pypa/pip/master/contrib/get-pip.py\r\nsudo python get-pip.py\r\n```\r\n\r\n#### Install python-gnupg\r\nIt's now quite easy to install [python-gnupg]. You could just run `sudo pip install python-gnupg`.\r\n\r\nHowever, you need at least version 0.3.7 because PGPager uses some features added in this version. At this point in time, you can only get it from the [python-gnupg BitBucket Project](https://bitbucket.org/vinay.sajip/python-gnupg/). To install from most recent sources, run\r\n```sh\r\nsudo apt-get install mercurial\r\nhg clone https://bitbucket.org/vinay.sajip/python-gnupg\r\ncd python-gnupg/\r\nsudo python setup.py install\r\npython test_gnupg.py\r\n```\r\nThe last command is for testing the installation and might take a while... You can skip that if you don't want to wait.\r\n\r\nAfter that you can verify that you got the correct version by typing\r\n```sh\r\npip list | grep gnupg\r\n```\r\nThis should give you `python-gnupg (0.3.7.dev0)`\r\n\r\n#### Install requests\r\nThanks to pip, that's very easy\r\n```sh\r\nsudo pip install requests\r\n```\r\n\r\n#### Install Open Sans font\r\nDownload and install by running the following commands\r\n```sh\r\nwget --content-disposition http://www.fontsquirrel.com/fonts/download/open-sans\r\nunzip open-sans.zip *.ttf -d open-sans\r\nsudo mv open-sans /usr/share/fonts/truetype/open\r\n```\r\n\r\n### Run PGPager\r\nClone the repository\r\n```sh\r\ncd ~/\r\ngit clone https://github.com/ByteFex/PGPager\r\n```\r\n\r\nstart the script\r\n```sh\r\ncd PGPager\r\nsudo python pisms.py\r\n```\r\nand have fun!\r\n\r\n## Run PGPager on startup\r\nMaybe you want PGPager to start automatically when you boot your Pi. With [GNU screen](http://www.gnu.org/software/screen/), that's easy.\r\n\r\nWe first need to make the startup-script executable.\r\n```sh\r\ncd ~/PGPager\r\nchmod +x start_pisms\r\n```\r\n\r\nThen install screen\r\n```sh\r\nsudo apt-get install screen\r\n```\r\n\r\nand finally edit `rc.local`\r\n```sh\r\nsudo nano /etc/rc.local\r\n```\r\nAdd the following line before `exit 0`\r\n```sh\r\nsu - pi -c \"screen -dm -S pisms ~/PiSMS/start_pisms\"\r\n```\r\n\r\nYou can even take over the session and view debug-output when you ssh into your Pi after PGPager has started. To do that, use the command\r\n```sh\r\nscreen -DR\r\n```\r\n\r\nIf you want even more (or different) screen awesomeness, there is a nice [documentation](http://www.gnu.org/software/screen/manual/screen.html).\r\n\r\nLicense\r\n----\r\nOwner: ByteFex Langkamp-IT e.U.\r\n\r\n[GNU General Public License](http://www.gnu.org/licenses/gpl-2.0.txt)\r\n\r\n\r\n[pygame]:http://www.pygame.org/\r\n[FileZilla]:https://filezilla-project.org/\r\n[Adafruit Learning System]:https://learn.adafruit.com/adafruit-pitft-28-inch-resistive-touchscreen-display-raspberry-pi\r\n[Adafruit PiTFT]:http://www.adafruit.com/products/1601\r\n[VKeyboard]:https://github.com/wbphelps/VKeyboard\r\n[python-gnupg]:https://pythonhosted.org/python-gnupg/\r\n[GnuPG]:https://www.gnupg.org/\r\n[requests]:http://docs.python-requests.org/en/latest/\r\n[textrect]:http://www.pygame.org/pcr/text_rect/index.php","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}